Allow moveable groups	
	moving updates order db
		PUT categorygroups/categoryid
			update id, name and order for the given category id at categorymodelid identifier
		put full change after new array defined. if an error on the HTTP request roll it back -> say there has been an error and restore a stored version of th array
		
		PUT category items
			only update the previous and current arrays. order via the front end and send that full snapshot to the backend after each move.
				reorder before sending
				if moved in same card, only send that card info
				end point to do an update against all data received, if that is 1 or 2 groups, it shouldn't matter
				send on categoryGroups class
				
			
	dragging to side of screen causes screen to drag
	DOES DELETING ITEMS STILL DELETE THE CORRECT ONE
	DOES POSTING ITEMS STILL POST AGAINST THE CORRECT ONE
	need to consider adding group order to the back end, otherwise the order won't be structured each time its received
		will this need to be a case of separating groups into a sub table with items a  subset of groups?
			This change could probably be isolated to the back end. As long as the APIs are returning the same data?
				There may need to be slight tweaks to the client as item arrays may be nested inside groups
	
Use angular material form from home screen to tidy up login
	
add try catch around data service in angular

reordering


	Reorder categories
	updates db realtime
	considerations
		if moving item then deleting it quickly. before server catches up, another FE update might have gone through.
		Solution:
			every time an action is performed on a list. SEnd the whole list back to the db?
			if an action is performed between arrays, update both arrays in db
			or
				keep it the same and on error or timeout, show error and refresh the data with db data so client knows what the db holds and is fresh data set
			
		adding new
			adds order as current order +1
		moving
			updates db with new position
		deleting
			cascades order of all other items
			

handle ordering of items properly
	new items last in list based off list length.
		moving items in list updates their order (gets final order on 'save')
		this needs to be kept up to date in the view and in the view model as data can be updated on server at any point
		model and server validation on ordering


Build Categories PAge a bit nicer

Really think about server side validation on client requests as the access token can be used to make custom post requests. HOw can this be prevented? 
	What if the user changes the categories URL ID?
	Can additional claims be added?
	validation on order of items - must follow on. max must be length 
save button to send array back to server

testing
	Create useful tests against everything
lazy loading?
force refresh ex[iry under cerrtin conditions
on guard and client services, what happens on failed refresh token? always redirect?

What is stopping a user from modifying the post request nad changing the data to add whatever they want?
	can post requests be signed?
implement post to add new categories
handle memory eak caused by user leaving paage after sending request and befor receiving response
	https://stackoverflow.com/questions/35042929/is-it-necessary-to-unsubscribe-from-observables-created-by-http-methods
convert catgory items id to long?
Handle no data found on fetch

modularise module
Build API adding/reordering items
build front end submitting new orders
add angular progress spinner while loading
max number of category item groups

Rename TS javascript files on production so they aren't cached by users


		
	my rankings/id
		build hand coded my-rankings/id and have it displayed on my-rankings/id page
		have user accessing my-rankings/id submit a GET for their rankings
		display their rankings (loosely)
		build my=rankings/id table
		replace hard coded my-rankings with db call
		
		build post method for adding new rankings
		build front end sorting and allow this to submit to db on submit/save
		should update page async	
		build post method for adding new rankings category
		should update page async


Build my-rankings/id model - hand built
Build my-rankings GET API - any user
Display rankings in angular and when clicked take you to rankings/id
Build rankings ID in GET API - any user
display this in angular when clicked
2FA
delete user
	change pasword - user password change inserts hashed salted password 
Implement revoke method on refresh token
	look into common  reasons methods for revoking tokens (i.e. too many API requests)
validation on user email format

PROD
	increase access token time

git 

cd C:\Users\tbenn\source\repos\Rannc
git add --all
git commit -m "Group order updates are stored in the db"
git push
